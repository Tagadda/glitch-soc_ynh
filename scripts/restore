#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=10

ynh_restore_file --origin_path="$install_dir"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# REINSTALL RUBY
#=================================================
ynh_script_progression --message="Reinstalling Ruby and NodeJS..." --weight=10

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$NODEJS_VERSION
ynh_install_ruby --ruby_version=$RUBY_VERSION

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Restoring the PostgreSQL database..." --weight=10

ynh_psql_execute_file_as_root --file="./db.sql" --database="$db_name"

#=================================================
# INSTALLING RUBY AND BUNDLER
#=================================================
ynh_script_progression --message="Installing Ruby dependencies..." --weight=10

# Add swap if needed
total_memory=$(ynh_get_ram --total)
swap_needed=0

if [ $total_memory -lt $MEMORY_NEEDED ]; then
	# Need a minimum of 8Go of memory
	swap_needed=$(($MEMORY_NEEDED - $total_memory))

	ynh_script_progression --message="Adding $swap_needed Mo to swap..." --weight=1
	ynh_add_swap --size=$swap_needed
fi

pushd "$install_dir/live"
	ynh_use_ruby
	ynh_gem update --system --no-document
	ynh_gem install bundler --no-document
popd

#=================================================
# RESTORE SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Restoring system configurations related to $app..." --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

# Restore systemd services
ynh_restore_file --origin_path="/etc/systemd/system/$app-web.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-sidekiq.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-streaming.service"
systemctl enable "$app-web" "$app-sidekiq" "$app-streaming" --quiet

yunohost service add "$app-web" --description="$app web service"
yunohost service add "$app-sidekiq" --description="$app sidekiq service"
yunohost service add "$app-streaming" --description="$app streaming service"

# Other various files...

mkdir -p "/var/log/$app"
ynh_use_logrotate

ynh_restore_file --origin_path="/etc/cron.d/$app"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM OR THE APP SERVICE
#=================================================
ynh_script_progression --message="Starting $app's service and reloading NGINX..." --weight=1

ynh_systemd_action --service_name=${app}-web --action="start" --log_path=/var/log/$app/${app}-web.log --line_match="Listening on"
ynh_systemd_action --service_name=${app}-sidekiq --action="start" --log_path=/var/log/$app/${app}-sidekiq.log --line_match="Schedules Loaded"
ynh_systemd_action --service_name=${app}-streaming --action="start" --log_path=/var/log/$app/${app}-streaming.log --line_match="Worker 1 now listening"

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --weight=1
